- name: play
  hosts: ec2
  environment:
    DOTFILES_FORCE: "true"
  tasks:
    - name: get dotfiles facts
      action: 'dotfile_facts'

    - name: checkout dotfiles
      ansible.builtin.git:
        repo: 'https://github.com/daler/dotfiles.git'
        dest: '~/dotfiles'

    - name: copy dotfiles
      ansible.builtin.command: ~/dotfiles/setup.sh --dotfiles
      when: not dotfiles

    - name: install conda
      ansible.builtin.command: ~/dotfiles/setup.sh --install-conda
      when: not conda

    - name: set up bioconda
      ansible.builtin.command: ~/dotfiles/setup.sh --set-up-bioconda
      when: not bioconda

    - name: install ripgrep
      ansible.builtin.command: ~/dotfiles/setup.sh --install-ripgrep
      when: not rg

    - name: install vd
      ansible.builtin.command: ~/dotfiles/setup.sh --install-vd
      when: not vd

    - name: install fzf
      ansible.builtin.command: ~/dotfiles/setup.sh --install-fzf
      when: not fzf

    - name: install npm
      ansible.builtin.command: ~/dotfiles/setup.sh --install-npm
      when: not npm

    - name: install nvim
      ansible.builtin.command: ~/dotfiles/setup.sh --install-neovim
      when: not nvim

    - name: git config
      ansible.builtin.blockinfile:
        path: ~/.gitconfig
        insertafter: diff3
        block: |
          [user]
          	name = Ryan Dale
          	email = ryan.dale@nih.gov

    - name: install nvim plugins
      ansible.builtin.command: |
        nvim +"lua require('lazy').restore({wait=true})" +q +q
      when: not lazy

    - name: install lsps
      ansible.builtin.shell:
        cmd: ca && nvim --headless  +"MasonInstall pyright black shfmt bash-language-server isort" +q
        executable: /bin/bash
      when: not mason

    - name: apt installs
      become: true
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - build-essential
          - curl
          - docker.io
          - git
          - htop
          - iotop
          - podman
          - rsync
          - tmux
          - wget

    - name: apt upgrade
      become: true
      ansible.builtin.apt:
        upgrade: true

    - name: Create "docker" group
      become: true
      group:
        name: "docker"
        state: present

    - name: Add remote "ubuntu" user to "docker" group
      become: true
      user:
        name: "ubuntu"
        group: "docker"
